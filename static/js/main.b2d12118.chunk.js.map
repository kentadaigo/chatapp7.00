{"version":3,"sources":["component/chat.jsx","component/login.jsx","component/request.jsx","component/friendrequest.jsx","component/userSearch.jsx","component/friend.jsx","component/roomSelect.jsx","component/signup.jsx","App.js","reportWebVitals.js","index.js","component/css/select.module.css","component/css/chat.module.css","component/css/login.module.css"],"names":["socket","io","Chat","props","useState","messageList","setMessageList","message","setMessage","newMessage","setNewMessage","messagesEndRef","useRef","isMountRef","isTyped","setIsTyped","useEffect","Axios","post","room1","String","userId","chatId","room2","senderId","reseiverId","then","response","data","console","log","scroll","scrollTo","current","getBoundingClientRect","emit","on","map","obj","id","sendername","comment","room","isRead","scrollToBottom","sendMessage","e","preventDefault","user","sendNo","leaveRoom","leave","scrollIntoView","behavior","minWidth","className","style","container","username","roomName","onClick","chatarea","payload","index","comment1","myname","mycomment","clearRight","comment2","othername","mothercomment","clearLeft","form","pointer","type","name","placeholder","value","onChange","target","ref","maxWidth","leaveS","chatareaS","formS","pointerS","Login","email","setEmail","password","setPassword","emailError","setEmailError","passError","setPassError","emailChange","passChange","decideLogin","isLoggedIn","login","push","setjson","JSON","stringify","window","localStorage","setItem","backHome","errorMsg","containerS","Request","open","setOpen","requestButton","requestname","requestright1","beFriend","requestId","requestright2","deleteRequest","FriendRequest","requestList","setRequestList","get","addFriend","delete","select","requestTop","requestBottom","length","selectS","UserSearch","search","setSearch","userList","setUserList","isNull","setIsNull","changeSearch","searchUser","sendRequest","alert","searchButton","friendIdList","includes","sendButton","Friend","noRead","setNoRead","load","friendId","selectBottom","selectRoom","friendname","RoomSelect","page","setPage","setChatId","setRoomName","roomList","setRoomList","setUser","setUserId","setFriendIdList","newFriend","setNewFriend","setLoad","inform","setInform","setTimeout","selectPage","number","quit","selectTop","friendList","SignUp","setName","passCheck","setPassCheck","isRegistered","setIsRegistered","nameNone","setNameNone","emailNone","setEmailNone","passNone","setPassNone","passCheckError","setPassCheckError","error","setError","nameChange","checkChange","register","goLogin","errorTop","pass2","App","setIsLoggedIn","setId","strage","getItem","loggedData","parse","home","currentPage","loginPage","signupPage","homePage","RoomSelectPage","logout","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b2d12118.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef} from \"react\";\r\nimport io from 'socket.io-client'\r\nimport Axios from \"axios\"\r\nimport style from \"./css/chat.module.css\"\r\nimport  MediaQuery from \"react-responsive\"\r\nimport { animateScroll as scroll } from 'react-scroll'\r\nconst socket = io('https://young-yame-0822.lolipop.io')\r\n\r\nfunction Chat (props){\r\n  const [messageList,setMessageList]=useState([])\r\n  const [message,setMessage]=useState(\"\")\r\n  const [newMessage,setNewMessage]=useState([])\r\n  const messagesEndRef = useRef(null)\r\n  const isMountRef=useRef(null)\r\n  const [isTyped,setIsTyped]=useState(false)\r\n\r\n  useEffect(()=>{\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/getcomments\",{\r\n            room1:String(props.userId)+\":\"+String(props.chatId),\r\n            room2:String(props.chatId)+\":\"+String(props.userId),\r\n            senderId:props.chatId,\r\n            reseiverId:props.userId\r\n        }).then((response)=>{\r\n            setMessageList(response.data);\r\n            console.log(\"過去のデータ取得\")\r\n        })\r\n    },[props.chatId,props.userId])\r\n    useEffect(()=>{\r\n        scroll.scrollTo(1000000000000000,1000)\r\n        console.log(messagesEndRef.current.getBoundingClientRect())\r\n    },[])\r\n\r\n  useEffect(()=>{\r\n    socket.emit(\"JOIN_CHAT\",{\r\n        room1:String(props.userId)+\":\"+String(props.chatId),\r\n        room2:String(props.chatId)+\":\"+String(props.userId)\r\n    })\r\n\r\n  },[props.chatId,props.userId])\r\n\r\n    useEffect(()=>{\r\n        isMountRef.current=true;\r\n        socket.on(\"RECEIVE_MESSAGE\",(data)=>{\r\n            if(isMountRef.current){\r\n                setNewMessage(data)\r\n                console.log(data)\r\n            }\r\n        })\r\n        return()=>isMountRef.current=false\r\n        \r\n        \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        isMountRef.current=true;\r\n        socket.on(\"RECEIVE_READ\",(data)=>{\r\n            if(isMountRef.current){\r\n                console.log(\"相手があなたのメッセージをみました\")\r\n                setMessageList(messageList=>messageList.map(obj=>\r\n                    ({\r\n                    id:obj.id,\r\n                    senderId:obj.senderId,\r\n                    sendername:obj.sendername,\r\n                    reseiverId:obj.reseiverId,\r\n                    comment:obj.comment,\r\n                    room:obj.room,\r\n                    isRead:1\r\n                    })\r\n                ))\r\n            }\r\n        })\r\n        return()=>isMountRef.current=false\r\n        \r\n        \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        isMountRef.current=true;\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/read\",{\r\n            senderId:props.chatId,\r\n            reseiverId:props.userId\r\n            }).then((response)=>{\r\n                if(isMountRef.current){\r\n                    console.log(response.data[0])\r\n                }\r\n        })\r\n        socket.emit(\"SEND_READ\",{\r\n            room1:String(props.userId)+\":\"+String(props.chatId),\r\n            room2:String(props.chatId)+\":\"+String(props.userId),\r\n            message:newMessage\r\n        })\r\n        setMessageList(messageList=>[...messageList,newMessage])\r\n        scrollToBottom()\r\n\r\n        return()=>isMountRef.current=false\r\n    },[newMessage,props.chatId,props.userId])\r\n\r\n    const sendMessage=(e)=>{\r\n        e.preventDefault();\r\n        socket.emit(\"SEND_MESSAGE\",{\r\n            senderId:props.userId,\r\n            sendername:props.user,\r\n            reseiverId:props.chatId,\r\n            comment:message,\r\n            room1:String(props.userId)+\":\"+String(props.chatId),\r\n            room2:String(props.chatId)+\":\"+String(props.userId),\r\n            isRead:0\r\n        })\r\n        props.sendNo(e,props.userId,props.user,props.chatId,message)\r\n        setMessageList([...messageList,{\r\n            sendername:props.user,\r\n            senderId:props.userId,\r\n            comment:message\r\n        }])\r\n        setMessage(\"\")\r\n        setIsTyped(false)\r\n        scrollToBottom()\r\n    }\r\n    const leaveRoom=()=>{\r\n        isMountRef.current=true;\r\n        socket.emit(\"LEAVE_CHAT\",{\r\n            room1:String(props.userId)+\":\"+String(props.chatId),\r\n            room2:String(props.chatId)+\":\"+String(props.userId)\r\n        })\r\n        props.leave()\r\n        return()=>isMountRef.current=false\r\n        \r\n    }\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef?.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MediaQuery minWidth={500}>\r\n                <div className={style.container}>\r\n                    <div className={style.username}>\r\n                        <h2>{props.roomName}</h2>\r\n                        <button onClick={leaveRoom} className={style.leave}>ルームセレクトに戻る</button>\r\n                    </div>\r\n                <div className={style.chatarea}>\r\n                {messageList.map((payload, index)=>{\r\n                    if(props.userId===payload.senderId){\r\n                        let isRead=payload.isRead===1;\r\n                        return(\r\n                            <div key={index} className={style.comment1}>\r\n                                <h3 className={style.myname}>{payload.sendername}</h3>\r\n                                <p className={style.mycomment}>{payload.comment}</p>\r\n                                {isRead?\r\n                                <label>既読</label>\r\n                                :null}\r\n                                <div className={style.clearRight}></div>\r\n                            </div>\r\n                            )\r\n                    }else{\r\n                        return(\r\n                            <div key={index} className={style.comment2}>\r\n                                <h3 className={style.othername}>{payload.sendername}</h3>\r\n                                <p className={style.mothercomment}>{payload.comment}</p>\r\n                                <div className={style.clearLeft}></div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    \r\n                })}\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.pointer}>\r\n                        <textarea type=\"text\" name=\"message\"\r\n                        placeholder='メッセージを入力'\r\n                        value={message}\r\n                        onChange={(e)=>{setMessage(e.target.value);setIsTyped(e.target.value!==\"\")}}/>\r\n                        {isTyped?\r\n                        <>\r\n                        <button onClick={sendMessage}>送信</button>\r\n                        <div className={style.clearRight}></div>\r\n                        </>\r\n                        :\r\n                        null}\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div ref={messagesEndRef}/>\r\n            </div>\r\n            </MediaQuery>\r\n            {/*スマホ版*/}\r\n            <MediaQuery maxWidth={500}>\r\n                <div className={style.container}>\r\n                    <div className={style.username}>\r\n                        <h2>{props.roomName}</h2>\r\n                        <button onClick={leaveRoom} className={style.leaveS}>戻る</button>\r\n                    </div>\r\n                <div className={style.chatareaS}>\r\n                {messageList.map((payload, index)=>{\r\n                    if(props.userId===payload.senderId){\r\n                        let isRead=payload.isRead===1;\r\n                        return(\r\n                            <div key={index} className={style.comment1}>\r\n                                <h3 className={style.myname}>{payload.sendername}</h3>\r\n                                <p className={style.mycomment}>{payload.comment}</p>\r\n                                {isRead?\r\n                                <label>既読</label>\r\n                                :null}\r\n                                <div className={style.clearRight}></div>\r\n                            </div>\r\n                            )\r\n                    }else{\r\n                        return(\r\n                            <div key={index} className={style.comment2}>\r\n                                <h3 className={style.othername}>{payload.sendername}</h3>\r\n                                <p className={style.mothercomment}>{payload.comment}</p>\r\n                                <div className={style.clearLeft}></div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    \r\n                })}\r\n                </div>\r\n                <div className={style.formS}>\r\n                    <div className={style.pointerS}>\r\n                        <textarea type=\"text\" name=\"message\"\r\n                        placeholder='メッセージを入力'\r\n                        value={message}\r\n                        onChange={(e)=>{setMessage(e.target.value);setIsTyped(e.target.value!==\"\")}}/>\r\n                        {isTyped?\r\n                        <>\r\n                        <button onClick={sendMessage}>送信</button>\r\n                        <div className={style.clearRight}></div>\r\n                        </>\r\n                        :\r\n                        null}\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n            <div ref={messagesEndRef}/>\r\n            </MediaQuery>\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default Chat","import {useState} from \"react\"\r\nimport Axios from \"axios\"\r\nimport style from \"./css/login.module.css\"\r\nimport  MediaQuery from \"react-responsive\"\r\nfunction Login (props){\r\n    const [email,setEmail]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [emailError,setEmailError]=useState(false)\r\n    const [passError,setPassError]=useState(false)\r\n\r\n    /*ログイン欄とパスワード欄が入力されたとき */\r\n    const emailChange=(e)=>{\r\n        setEmail(e.target.value)\r\n        setEmailError(false)\r\n    }\r\n    const  passChange=(e)=>{\r\n        setPassword(e.target.value)\r\n        setPassError(false)\r\n    }\r\n\r\n    /*ログインボタンが押された時 */\r\n    const decideLogin=()=>{\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/login\",{\r\n            email:email,\r\n            password:password\r\n        }).then((response)=>{\r\n            if(response.data.isLoggedIn){\r\n                props.login()\r\n                var array=[]\r\n                var obj={\r\n                    \"isLoggedIn\":true,\r\n                    \"id\":response.data.id,\r\n                    \"name\":response.data.name\r\n                }\r\n                array.push(obj)\r\n                var setjson=JSON.stringify(obj)\r\n                window.localStorage.setItem(\"loggedData\",setjson)\r\n                props.backHome()\r\n            }else{\r\n                if(response.data.errorMsg===\"email\"){\r\n                    setEmailError(true)\r\n                }else{\r\n                    setPassError(true)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return(\r\n        <>\r\n            <MediaQuery minWidth={500}>\r\n                <div className=\"home\">\r\n                    <div className={style.container}>\r\n                        <label>メールアドレス</label>\r\n                        <br/>\r\n                        <input type=\"text\" value={email} onChange={emailChange} placeholder=\"email\"/>\r\n                        {emailError ?\r\n                        <p>このメールアドレスは登録されていません</p>\r\n                        :null}\r\n                        <br/>\r\n                        <label>パスワード</label>\r\n                        <br/>\r\n                        <input type=\"password\" value={password} onChange={passChange} placeholder=\"password\"/>\r\n                        {passError ?\r\n                        <p>パスワードが間違っています</p>\r\n                        :null}\r\n                        <br/>\r\n                        <button onClick={decideLogin}>ログイン</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                \r\n                </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={500}>\r\n                <div className=\"homeLoginS\">\r\n                    <div className={style.containerS}>\r\n                        <label>メールアドレス</label>\r\n                        <br/>\r\n                        <input type=\"text\" value={email} onChange={emailChange} placeholder=\"email\"/>\r\n                        {emailError ?\r\n                        <p>このメールアドレスは登録されていません</p>\r\n                        :null}\r\n                        <br/>\r\n                        <label>パスワード</label>\r\n                        <br/>\r\n                        <input type=\"password\" value={password} onChange={passChange} placeholder=\"password\"/>\r\n                        {passError ?\r\n                        <p>パスワードが間違っています</p>\r\n                        :null}\r\n                        <br/>\r\n                        <button onClick={decideLogin}>ログイン</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                \r\n                </div>\r\n            </MediaQuery>\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default Login","import style from \"./css/select.module.css\"\r\nimport {useState} from \"react\"\r\nfunction Request(props){\r\n    const [open,setOpen]=useState(true)\r\n\r\n    const accept=(e)=>{\r\n        setOpen(false)\r\n        props.beFriend(e,props.requestId,props.requestname)\r\n    }\r\n    const decline=()=>{\r\n        setOpen(false)\r\n        props.deleteRequest(props.requestId)\r\n    }\r\n    return(\r\n        <>\r\n        {open ?\r\n            <div>\r\n                <button className={style.requestButton}>{props.requestname}</button>\r\n                <button className={style.requestright1} onClick={accept}>◎</button>\r\n                <button className={style.requestright2} onClick={decline}>✖</button>\r\n            </div>        \r\n        :null}\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default Request;","import Axios from \"axios\"\r\nimport {useState,useEffect} from \"react\"\r\nimport style from \"./css/select.module.css\"\r\nimport io from 'socket.io-client'\r\nimport  MediaQuery from \"react-responsive\"\r\nimport Request from \"./request\"\r\nconst socket = io('https://young-yame-0822.lolipop.io')\r\nfunction FriendRequest(props){\r\n    const [requestList,setRequestList]=useState([])\r\n    \r\n    useEffect(()=>{\r\n        Axios.get(`https://young-yame-0822.lolipop.io/friendrequest/${props.userId}`).then((response)=>{\r\n            setRequestList(response.data);\r\n            console.log(response.data)\r\n         })\r\n    },[props.userId])\r\n    \r\n    const beFriend=(e,requestId,requestname)=>{\r\n        e.preventDefault();\r\n        console.log(requestId,requestname)\r\n        socket.emit(\"BE_FRIEND\",{\r\n            id:props.userId,\r\n            user:props.user,\r\n            requestId:requestId\r\n        })\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/befriend\",{\r\n            userId:props.userId,\r\n            username:props.user,\r\n            requestId:requestId,\r\n            requestname:requestname\r\n        })\r\n        props.addFriend(requestId,requestname)\r\n    }\r\n\r\n    const deleteRequest=(requestId)=>{\r\n        Axios.delete(`https://young-yame-0822.lolipop.io/deleterequest/${requestId}/${props.userId}`)\r\n    }\r\n    return(\r\n        <>\r\n            <MediaQuery minWidth={500}>\r\n                <div className={style.select}>\r\n                    <div className={style.requestTop}>\r\n                        <button onClick={props.leave}>戻る</button>\r\n                    </div>\r\n                    \r\n                    <h2>リクエストリスト</h2>\r\n                    <div className={style.requestBottom}>\r\n                    {requestList.length>0 ?\r\n                    requestList.map((data,index)=>{\r\n                        console.log(index)\r\n                        return(\r\n                            <div key={index}>\r\n                                <Request requestId={data.requestId} requestname={data.requestname} \r\n                                beFriend={beFriend} deleteRequest={deleteRequest}/>\r\n                            </div>\r\n                        )\r\n                        \r\n                        \r\n                    }):\r\n                    <p>フレンドリクエストはありません</p>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={500}>\r\n                <div className={style.selectS}>\r\n                    <div className={style.requestTop}>\r\n                        <button onClick={props.leave}>戻る</button>\r\n                    </div>\r\n                    \r\n                    <h2>リクエストリスト</h2>\r\n                    <div className={style.requestBottom}>\r\n                    {requestList.length>0 ?\r\n                    requestList.map((data,index)=>{\r\n                        console.log(index)\r\n                        return(\r\n                            <div key={index}>\r\n                                <Request requestId={data.requestId} requestname={data.requestname} \r\n                                beFriend={beFriend} deleteRequest={deleteRequest}/>\r\n                            </div>\r\n                        )\r\n                        \r\n                        \r\n                    }):\r\n                    <p>フレンドリクエストはありません</p>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default FriendRequest","import {useState} from \"react\"\r\nimport Axios from \"axios\"\r\nimport style  from \"./css/select.module.css\"\r\nimport  MediaQuery from \"react-responsive\"\r\nfunction UserSearch(props){\r\n    const [search,setSearch]=useState(\"\")\r\n    const [userList,setUserList]=useState([])\r\n    const [message,setMessage]=useState(\"\")\r\n    const [isNull,setIsNull]=useState(true)\r\n    \r\n     const changeSearch=(e)=>{\r\n        setSearch(e.target.value)\r\n        setIsNull(e.target.value===\"\")\r\n    }\r\n    const searchUser=()=>{\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/serchusers\",{\r\n            user:search\r\n        }).then((response)=>{\r\n            setUserList(response.data);\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    const sendRequest=(id)=>{\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/sendrequest\",{\r\n            userId:id,\r\n            requestId:props.userId,\r\n            requestname:props.user\r\n        }).then((response)=>{\r\n            setMessage(response.data)\r\n        })\r\n    }\r\n\r\n    return(\r\n    <>\r\n        <MediaQuery minWidth={500}>\r\n            <div className={style.select}>\r\n                    <div className={style.requestTop}>\r\n                        <button onClick={props.leave}>戻る</button>\r\n                    </div>\r\n                    \r\n                    <h2>ユーザー検索</h2>\r\n                    <p className={style.alert}>{message}</p>\r\n                    <div className={style.search}>\r\n                        <input type=\"text\" value={search} onChange={changeSearch}/>\r\n                        {isNull?\r\n                        null\r\n                        :<button className={style.searchButton} onClick={()=>{searchUser()}}>検索</button>\r\n                        }\r\n                        \r\n                        {userList.map((data,index)=>{\r\n                            console.log(props.friendIdList.includes(data.id))\r\n                            if(props.friendIdList.includes(data.id)){\r\n                                return(\r\n                                    <p key={index}>{data.name}(フレンド)</p>\r\n                                )\r\n                            }else{\r\n                                return(\r\n                                    <div key={index}>\r\n                                        <p>{data.name}</p>\r\n                                        <button className={style.sendButton} onClick={()=>{sendRequest(data.id)}}>リクエストを送る</button>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                    </div>\r\n            </div>\r\n        </MediaQuery>\r\n        <MediaQuery maxWidth={500}>\r\n            <div className={style.selectS}>\r\n                    <div className={style.requestTop}>\r\n                        <button onClick={props.leave}>戻る</button>\r\n                    </div>\r\n                    \r\n                    <h2>ユーザー検索</h2>\r\n                    <p className={style.alert}>{message}</p>\r\n                    <div className={style.search}>\r\n                        <input type=\"text\" value={search} onChange={changeSearch}/>\r\n                        {isNull?\r\n                        null\r\n                        :<button className={style.searchButton} onClick={()=>{searchUser()}}>検索</button>\r\n                        }\r\n                        \r\n                        {userList.map((data,index)=>{\r\n                            console.log(props.friendIdList.includes(data.id))\r\n                            if(props.friendIdList.includes(data.id)){\r\n                                return(\r\n                                    <p key={index}>{data.name}(フレンド)</p>\r\n                                )\r\n                            }else{\r\n                                return(\r\n                                    <div key={index}>\r\n                                        <p>{data.name}</p>\r\n                                        <button className={style.sendButton} onClick={()=>{sendRequest(data.id)}}>リクエストを送る</button>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                    </div>\r\n            </div>\r\n        </MediaQuery>\r\n            \r\n    </>\r\n    )\r\n}\r\nexport default UserSearch","import { useState,useEffect} from \"react\";\r\nimport Axios from \"axios\"\r\nimport style from \"./css/select.module.css\"\r\nfunction Friend(props){\r\n    const [noRead,setNoRead]=useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(props.load===props.friendId || props.load===0){\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/notRead\",{\r\n            senderId:props.friendId,\r\n            reseiverId:props.userId\r\n        }).then((response)=>{\r\n            setNoRead(response.data[0])\r\n            console.log(response.data[0])\r\n        })\r\n        }\r\n    },[props.userId,props.friendId,props.load])\r\n    \r\n    if(noRead!==0){\r\n        return(\r\n            <div className={style.selectBottom}>\r\n                <button onClick={()=>{props.selectRoom(props.friendId,props.friendname)}}>{props.friendname}<span>{noRead}</span></button>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className={style.selectBottom}>\r\n                <button onClick={()=>{props.selectRoom(props.friendId,props.friendname)}}>{props.friendname}</button>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default Friend","import {useState,useEffect,useRef} from \"react\"\r\nimport Axios from \"axios\"\r\nimport Chat from \"./chat\";\r\nimport io from 'socket.io-client'\r\nimport style from \"./css/select.module.css\"\r\nimport FriendRequest from \"./friendrequest\";\r\nimport UserSearch from \"./userSearch\";\r\nimport  MediaQuery from \"react-responsive\"\r\nimport Friend from \"./friend\";\r\nconst socket = io('https://young-yame-0822.lolipop.io')\r\nfunction RoomSelect(props){\r\n    const [page,setPage]=useState(\"select\")\r\n    const [chatId,setChatId]=useState(0)\r\n    const [roomName,setRoomName]=useState(\"\")\r\n    const [roomList,setRoomList]=useState([])\r\n    const [user,setUser]=useState(\"\")\r\n    const [userId,setUserId]=useState(null)\r\n    const [friendIdList,setFriendIdList]=useState([])\r\n    const isMountRef=useRef(null)\r\n    const [newFriend,setNewFriend]=useState([])\r\n    const [load,setLoad]=useState(0)\r\n    const [newMessage,setNewMessage]=useState(null)\r\n    const [inform,setInform]=useState(false)\r\n\r\n    \r\n    useEffect(()=>{\r\n        setUser(props.user)\r\n        setUserId(props.userId)\r\n        socket.emit(\"ENTER_APP\",{\r\n            userId:props.userId\r\n        })\r\n    },[props.user,props.userId])\r\n\r\n    useEffect(()=>{\r\n        Axios.get(`https://young-yame-0822.lolipop.io/friendlist/${props.userId}`).then((response)=>{\r\n            setRoomList(response.data);\r\n            console.log(response.data)\r\n            setFriendIdList(response.data.map(obj=>obj.friendId))\r\n        })\r\n    },[props.userId])\r\n\r\n    useEffect(()=>{\r\n        isMountRef.current=true;\r\n        socket.on(\"RECEIVE_FRIEND\",(data)=>{\r\n            if(isMountRef.current){\r\n                setNewFriend(data)\r\n                console.log(data)\r\n            }\r\n        })\r\n        return()=>isMountRef.current=false\r\n        \r\n    },[])\r\n    useEffect(()=>{\r\n        setRoomList(roomList=>[...roomList,newFriend])\r\n        setFriendIdList(friendIdList=>[...friendIdList,newFriend.friendId])\r\n    },[newFriend])\r\n\r\n    useEffect(()=>{\r\n        if(newMessage!==null){\r\n            setInform(true)\r\n            setTimeout(()=>{\r\n                setInform(false)\r\n                setNewMessage(null)\r\n            },5000)\r\n        }else{\r\n            setInform(false)\r\n        }\r\n    },[newMessage])\r\n    useEffect(()=>{\r\n        socket.on(\"RECEIVE_NO\",(data)=>{\r\n            console.log(\"新着メッセージを受信しました\")\r\n            setLoad(null)\r\n            setLoad(data.senderId)\r\n            setNewMessage(data)\r\n            console.log(`${data.sendername}さんからメッセージが届きました`)\r\n        })\r\n    },[])\r\n\r\n    const sendNo=(e,senderId,sendername,reseiverId,comment)=>{\r\n        e.preventDefault();\r\n        socket.emit(\"NOHERE_MESSAGE\",{\r\n            senderId:senderId,\r\n            sendername:sendername,\r\n            reseiverId:reseiverId,\r\n            comment:comment\r\n        })\r\n    }\r\n\r\n    const selectRoom=(number,name)=>{\r\n        setChatId(number)\r\n        setRoomName(name)\r\n        setPage(\"chat\")\r\n    }\r\n    const leave=()=>{\r\n        setChatId(0)\r\n        setRoomName(\"\")\r\n        setPage(\"select\")\r\n    }\r\n\r\n    const addFriend=(id,name)=>{\r\n        setRoomList([...roomList,{friendId:id,friendname:name}])\r\n        setFriendIdList([...friendIdList,id])\r\n    }\r\n\r\n    const quit=()=>{\r\n        props.backHome()\r\n        socket.emit(\"LEAVE_APP\",{\r\n            userId:props.userId\r\n        })\r\n    }\r\n\r\n    let selectPage;\r\n    if(page===\"select\"){\r\n        selectPage=<>\r\n            <MediaQuery minWidth={500}>\r\n                <div className={style.select}>\r\n                    {inform ?\r\n                    <div className={style.inform}>\r\n                        <h5>新着メッセージ</h5>\r\n                        <p>{newMessage.sendername} : <span>{newMessage.comment}</span></p>\r\n                    </div>\r\n                    :null}\r\n                    <div className={style.selectTop}>\r\n                        <ul>\r\n                            <li><button onClick={()=>{setPage(\"serch\")}}>ユーザー検索</button></li>\r\n                            <li><button onClick={()=>{setPage(\"request\")}}>フレンドリクエスト</button></li>\r\n                            <li><button onClick={()=>{quit()}}>ホームに戻る</button></li>\r\n                            <div className={style.clearLeft}></div>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <h2>フレンド</h2>\r\n                    <div className={style.selectBottom}>\r\n                    {roomList.map((data,index)=>{\r\n                        return(\r\n                            <div key={index}>\r\n                                <Friend friendId={data.friendId} friendname={data.friendname} userId={props.userId} selectRoom={selectRoom} load={load}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={500}>\r\n                <div className={style.selectS}>\r\n                    {inform ?\r\n                        <div className={style.inform}>\r\n                            <h5>新着メッセージ</h5>\r\n                            <p>{newMessage.sendername} : <span>{newMessage.comment}</span></p>\r\n                        </div>\r\n                    :null}\r\n                    <div className={style.selectTop}>\r\n                        <ul>\r\n                            <li><button onClick={()=>{setPage(\"serch\")}}>ユーザー検索</button></li>\r\n                            <li><button onClick={()=>{setPage(\"request\")}}>フレンドリクエスト</button></li>\r\n                            <li><button onClick={()=>{quit()}}>ホームに戻る</button></li>\r\n                            <div className={style.clearLeft}></div>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <h2>フレンド</h2>\r\n                    <div className={style.selectBottom}>\r\n                    {roomList.map((data,index)=>{\r\n                        return(\r\n                            <div key={index}>\r\n                                <Friend friendId={data.friendId} friendname={data.friendname} userId={props.userId} selectRoom={selectRoom} load={load}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n        </>\r\n    }else if(page===\"request\"){\r\n        selectPage=<FriendRequest  user={user} userId={userId} leave={leave} addFriend={(id,name)=>{addFriend(id,name)}}/>\r\n    }else if(page===\"serch\"){\r\n        selectPage=<UserSearch friendList={roomList} friendIdList={friendIdList} userId={userId} leave={leave} user={user}/>\r\n    }else{\r\n        selectPage=<Chat chatId={chatId} roomName={roomName} user={user} userId={userId} sendNo={sendNo} leave={leave}/>\r\n    }\r\n    return(\r\n        <div>\r\n            {selectPage}\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default RoomSelect","import {useState} from \"react\"\r\nimport Axios from \"axios\"\r\nimport style from \"./css/login.module.css\"\r\nimport  MediaQuery from \"react-responsive\"\r\nfunction SignUp (props){\r\n    const [name,setName]=useState(\"\")\r\n    const [email,setEmail]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [passCheck,setPassCheck]=useState(\"\")\r\n    const [isRegistered,setIsRegistered]=useState(false)\r\n    const [nameNone,setNameNone]=useState(false)\r\n    const [emailNone,setEmailNone]=useState(false)\r\n    const [passNone,setPassNone]=useState(false)\r\n    const [passCheckError,setPassCheckError]=useState(false)\r\n    const [error,setError]=useState(false)\r\n    \r\n    /*入力欄に入力されたとき*/\r\n    const nameChange=(e)=>{\r\n        setName(e.target.value)\r\n        setNameNone(e.target.value===\"\")\r\n    }\r\n    const emailChange=(e)=>{\r\n        setEmail(e.target.value)\r\n        setEmailNone(e.target.value===\"\")\r\n    }\r\n    const passChange=(e)=>{\r\n        setPassword(e.target.value)\r\n        setPassNone(e.target.value===\"\")\r\n    }\r\n    const checkChange=(e)=>{\r\n        setPassCheck(e.target.value)\r\n        setPassCheckError(e.target.value!==password)\r\n    }\r\n\r\n    /*登録ボタンが押されたとき */\r\n    const register=()=>{\r\n        setError(false)\r\n        if(nameNone||emailNone||passNone||passCheckError){\r\n            setError(true)\r\n        }else if(name===\"\"||email===\"\"||password===\"\"||passCheck===\"\"){\r\n            if(name===\"\"){\r\n                setNameNone(true)\r\n            }\r\n            if(email===\"\"){\r\n                setEmailNone(true)\r\n            }\r\n            if(password===\"\"){\r\n                setPassNone(true)\r\n            }\r\n            if(passCheck===\"\"){\r\n                setPassCheckError(true)\r\n            }\r\n            setError(true)\r\n        }else{\r\n            setIsRegistered(true)\r\n            Axios.post(\"https://young-yame-0822.lolipop.io/signup\",{\r\n                name:name,\r\n                email:email,\r\n                password:password\r\n            })\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <>\r\n            {isRegistered ?\r\n            <>\r\n            <MediaQuery minWidth={500}>\r\n                <div className=\"home\">\r\n                    <div className={style.container}>   \r\n                        <p>新規登録が完了しました\r\n                        <br/>ログインしてサービスをお楽しみください</p>\r\n                        <button onClick={props.goLogin}>ログインする</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={500}>\r\n                <div className=\"homeS\">\r\n                    <div className={style.container}>   \r\n                        <p>新規登録が完了しました\r\n                        <br/>ログインしてサービスをお楽しみください</p>\r\n                        <button onClick={props.goLogin}>ログインする</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n            </>\r\n            \r\n            \r\n            :\r\n            <div>\r\n                {error?\r\n                <p className={style.errorTop}>※入力に誤りがあります</p>\r\n                :null}\r\n                <MediaQuery minWidth={500}>\r\n                <div className=\"homeSign\">\r\n                    <div className={style.container}>\r\n                        <div className={style.form}>\r\n                            <label>ユーザー名</label>\r\n                            <br/>\r\n                            <input type=\"text\" value={name} onChange={nameChange}/>\r\n                            {nameNone?\r\n                            <p>ユーザー名の入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.form}>\r\n                            <label>メールアドレス</label>\r\n                            <br/>\r\n                            <input type=\"text\" value={email} onChange={emailChange}/>\r\n                            {emailNone?\r\n                            <p>メールアドレスの入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.form}>\r\n                            <label>パスワード</label>\r\n                            <br/>\r\n                            <input type=\"password\" value={password} onChange={passChange}/>\r\n                            {passNone?\r\n                            <p>パスワードの入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.form}>\r\n                            <label>確認のためもう一度入力してください</label>\r\n                            <br/>\r\n                            <input type=\"password\" value={passCheck} onChange={checkChange}/>\r\n                            {passCheckError?\r\n                            <p>パスワードが一致しません</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <button onClick={register}>登録する</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                </div>\r\n                </MediaQuery>\r\n                <MediaQuery maxWidth={500}>\r\n                <div className=\"homeSignS\">\r\n                    <div className={style.containerS}>\r\n                        <div className={style.formS}>\r\n                            <label>ユーザー名</label>\r\n                            <br/>\r\n                            <input type=\"text\" value={name} onChange={nameChange}/>\r\n                            {nameNone?\r\n                            <p>ユーザー名の入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.formS}>\r\n                            <label>メールアドレス</label>\r\n                            <br/>\r\n                            <input type=\"text\" value={email} onChange={emailChange}/>\r\n                            {emailNone?\r\n                            <p>メールアドレスの入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.formS}>\r\n                            <label>パスワード</label>\r\n                            <br/>\r\n                            <input type=\"password\" value={password} onChange={passChange}/>\r\n                            {passNone?\r\n                            <p>パスワードの入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.formS}>\r\n                            <label className={style.pass2}>確認のためもう一度入力してください</label>\r\n                            <br/>\r\n                            <input type=\"password\" value={passCheck} onChange={checkChange}/>\r\n                            {passCheckError?\r\n                            <p>パスワードが一致しません</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <button onClick={register}>登録する</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                </div>\r\n                </MediaQuery>\r\n                \r\n                \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\nexport default SignUp","import {useState,useEffect} from \"react\"\nimport './App.css';\nimport Chat from \"./component/chat\";\nimport Login from \"./component/login\";\nimport RoomSelect from \"./component/roomSelect\";\nimport SignUp from \"./component/signup\";\nimport  MediaQuery from \"react-responsive\"\n\nfunction App() {\n  const [page,setPage]=useState(\"home\");\n  const [isLoggedIn,setIsLoggedIn]=useState(false)\n  const [id,setId]=useState(null)\n  const [name,setName]=useState(\"ゲスト\")\n  \n\n  useEffect(()=>{\n    const strage=localStorage.getItem(\"loggedData\")\n    const loggedData=JSON.parse(strage)\n    if(loggedData !==null){\n      setName(loggedData[\"name\"])\n      setId(loggedData[\"id\"])\n    }else{\n      setName(\"ゲスト\")\n    }\n  },[isLoggedIn])\n  useEffect(()=>{\n    const strage=localStorage.getItem(\"loggedData\")\n    const loggedData=JSON.parse(strage)\n    if(loggedData !==null){\n      setIsLoggedIn(true)\n    }\n  },[])\n\n  /*ページ変更関数 */\n  const loginPage=()=>{\n    setPage(\"login\")\n  }\n  const signupPage=()=>{\n    setPage(\"signup\")\n  }\n  const homePage=()=>{\n    setPage(\"home\")\n  }\n  const RoomSelectPage=()=>{\n    setPage(\"roomselect\")\n  }\n\n  /*ログイン状態変更関数 */\n  const logout=()=>{\n    setIsLoggedIn(false)\n    localStorage.removeItem(\"loggedData\")\n  }\n  const login=()=>{\n    setIsLoggedIn(true)\n  }\n\n  /*ホームページ */\n  let home;\n  if(isLoggedIn){\n    home=<>\n      <MediaQuery minWidth={500}>\n      <div className=\"home\">\n        <div className=\"container\">\n          <h3>ようこそ{name}さん</h3>\n          <button className=\"homebutton\" onClick={RoomSelectPage}>チャットを始める</button>\n          <br/>\n          <button className=\"homebutton\" onClick={logout}>ログアウト</button>\n        </div>\n      </div>\n      </MediaQuery>\n      <MediaQuery maxWidth={500}>\n      <div className=\"homeS\">\n        <div className=\"container\">\n          <h3>ようこそ{name}さん</h3>\n          <button className=\"homebutton\" onClick={RoomSelectPage}>チャットを始める</button>\n          <br/>\n          <button className=\"homebutton\" onClick={logout}>ログアウト</button>\n        </div>\n      </div>\n      </MediaQuery>\n    </>\n  }else{\n    home=<>\n      <MediaQuery minWidth={500}>\n        <div className=\"home\">\n          <div className=\"container\">\n            <button className=\"homebutton\" onClick={loginPage}>ログイン</button>\n            <button className=\"homebutton\" onClick={signupPage}>新規登録</button>\n          </div>\n        </div>\n      </MediaQuery>\n      <MediaQuery maxWidth={500}>\n        <div className=\"homeS\">\n          <div className=\"container\">\n            <button className=\"homebutton\" onClick={loginPage}>ログイン</button>\n            <button className=\"homebutton\" onClick={signupPage}>新規登録</button>\n          </div>\n        </div>\n      </MediaQuery>\n    </>\n    \n      \n    \n  }\n\n  /*ページたち */\n  let currentPage;\n  if(page===\"home\"){\n    currentPage=home\n  }else if(page===\"login\"){\n    currentPage=<Login login={login} backHome={homePage}/>\n  }else if(page===\"signup\"){\n    currentPage=<SignUp backHome={homePage} goLogin={loginPage}/>\n  }else if(page===\"roomselect\"){\n    currentPage=<RoomSelect backHome={homePage} userId={id} user={name}/>\n  }else{\n    currentPage=<Chat backHome={homePage}/>\n  }\n\n  return (\n    <div className=\"App\">\n      <p className=\"version\">個人チャットアプリver.7.10</p>\n     {currentPage}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"select_select__2WwQl\",\"selectS\":\"select_selectS__2pPYI\",\"inform\":\"select_inform__2oQJ3\",\"selectTop\":\"select_selectTop__P97aG\",\"clearLeft\":\"select_clearLeft__4Fzdz\",\"selectBottom\":\"select_selectBottom__2pD0A\",\"serch\":\"select_serch__1MJ2u\",\"requestTop\":\"select_requestTop__1z5EY\",\"requestBottom\":\"select_requestBottom__NnxNa\",\"requestButton\":\"select_requestButton__15-gl\",\"requestright1\":\"select_requestright1__owZfQ\",\"requestright2\":\"select_requestright2__3FI_J\",\"alert\":\"select_alert__1zGBj\",\"search\":\"select_search__3II-S\",\"searchButton\":\"select_searchButton__1UQeJ\",\"sendButton\":\"select_sendButton__3_wLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chat_container__2lqLN\",\"username\":\"chat_username__25RCb\",\"chatarea\":\"chat_chatarea__tDb7g\",\"chatareaS\":\"chat_chatareaS__1XXmZ\",\"comment1\":\"chat_comment1__3IBfB\",\"comment2\":\"chat_comment2__139ao\",\"clearLeft\":\"chat_clearLeft__1O1xE\",\"clearRight\":\"chat_clearRight__2I0Z6\",\"form\":\"chat_form__imqpx\",\"formS\":\"chat_formS__1BE0l\",\"pointerS\":\"chat_pointerS__tag7J\",\"pointer\":\"chat_pointer__2ndQQ\",\"leave\":\"chat_leave__PvIfP\",\"leaveS\":\"chat_leaveS__1WazM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__1IZiD\",\"containerS\":\"login_containerS__kAWfM\",\"pass2\":\"login_pass2__1pupM\",\"errorTop\":\"login_errorTop__1fAHi\",\"form\":\"login_form__2H_XJ\",\"formS\":\"login_formS__1chky\"};"],"sourceRoot":""}